# ${NAMESPACE}/${REPO}:${TAG} Dockerfile (generated at ${TIME})
FROM ${ROOT_IMAGE}

MAINTAINER ${MAINTAINER}

ENV DEBIAN_FRONTEND noninteractive

COPY dry-wit aptget-install.sh aptget-install.inc.sh aptget-cleanup.sh aptget-cleanup.inc.sh help \
     /usr/local/bin/
COPY 00_create_rsnapshot_conf.sh 00_create_rsnapshot_conf.inc.sh /etc/my_init.d/
COPY display-dockerfile.sh /usr/local/bin/Dockerfile

RUN mkdir -p /etc/service/.template/log && \
    touch /var/local/docker-installed-packages.txt && \
    chmod +x /usr/local/bin/dry-wit /usr/local/bin/aptget-install.sh /usr/local/bin/aptget-cleanup.sh && \
    chmod +x /etc/my_init.d/00_create_rsnapshot_conf.sh && \
    chmod -x /etc/my_init.d/00_create_rsnapshot_conf.inc.sh

COPY logstash /etc/service/.template/log/run

RUN mkdir /Dockerfiles && \
    yes | add-apt-repository ppa:webupd${JAVA_VERSION}team/java && \
    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && \
    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections  && \    
    ${APTGET_INSTALL} wget && \
    wget -qO - https://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add - && \
    echo "deb http://packages.elasticsearch.org/logstash/1.5/debian stable main" | sudo tee -a /etc/apt/sources.list && \
    ${APTGET_INSTALL} iptables facter rsnapshot logstash python-software-properties \
                       oracle-java${JAVA_VERSION}-installer libXtst6 libxi6 && \
    cd /bin && rm -f /bin/sh && ln -s /bin/bash sh && \
    wget -nv --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie;gpw_e24=http://edelivery.oracle.com" ${JCE_DOWNLOAD_URL} -O /tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip && \
    cd /tmp && jar xvf UnlimitedJCEPolicyJDK${JAVA_VERSION}.zip && \
    cp /tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}/* /usr/lib/jvm/java-${JAVA_VERSION}-oracle/jre/lib/security/ && \
    rm -rf /tmp/UnlimitedJCEPolicyJDK${JAVA_VERSION}*  && \
    cd /usr/lib/jvm && ln -s java-${JAVA_VERSION}-oracle java && \
    chmod +x /etc/service/.template/log/run && \
    chmod +x -- /usr/local/bin/help /usr/local/bin/Dockerfile && \    
    ln -s -- /usr/local/bin/help /usr/local/bin/-h && \
    ln -s -- /usr/local/bin/help /usr/local/bin/--help && \
    ln -s -- /usr/local/bin/Dockerfile /usr/local/bin/dockerfile && \
    ${APTGET_CLEANUP}

CMD ["/sbin/my_init"]

COPY logstash-default.conf /etc/logstash/conf.d/default.conf
COPY Dockerfile /Dockerfiles/${NAMESPACE}-${REPO}.${TAG}
COPY Dockerfile /Dockerfiles/Dockerfile

# Children should provide:
# - service: to run the process (letting runit handling forking it),
# - logstash.conf: the specific logstash configuration for the process.
#
# And then add steps in their Dockerfile such as the following:
# RUN mkdir /etc/service/${REPO} && cp -r /etc/service/.template/* /etc/service/${REPO}
# COPY service /etc/service/${REPO}/run
# RUN chmod +x /etc/service/${REPO}/run
# COPY logstash.conf /etc/logstash/conf.d/${REPO}.conf
#
# If the process is itself a daemon (such as Apache), then provide a LSB-like script
# and call it from within /etc/rc.local:
# COPY service /etc/rc.local
# RUN chmod +x /etc/rc.local
#
# Keep in mind that in these cases logstash integration is responsibility of the
# rc.local script in this case.
#
# Before finishing the Dockerfile, please RUN \${APTGET_CLEANUP} if the
# image installs packages via $\{APTGET_INSTALL}.
#
# Additionaly, every Dockerfile should add its own Dockerfile to the /Dockerfiles
# folder:
# COPY Dockerfile /Dockerfiles/$\{NAMESPACE}-$\{REPO}.$\{TAG}
#
# And last, adding comments on how to run the image is very helpful.
